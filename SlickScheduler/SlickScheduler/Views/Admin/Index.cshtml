@model PagedList.IPagedList<SlickScheduler.Models.User>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var users = ViewBag.Users;
}

<h2>View All Users</h2>

@using (Html.BeginForm("Index", "Admin", FormMethod.Get))
{
    <div>
        @Html.TextBox("Search", ViewBag.CurrentFilter as string, new { @class = "form-control col-lg-4", placeholder = "Search" })
        <input type="submit" class="btn btn-default col-lg-offset-0" value="Search" />
        <a href=@Url.Action("Index", "Admin") class="btn btn-primary col-lg-offset-0">Reset</a>
    </div>
}


<table class="table table-bordered table-hover">
    <thead>
        <tr>
            <td colspan="5"><center><strong>Users</strong></center></td>
        </tr>
    </thead>
    <tbody>
        <tr class="active">
            <td class="active"><strong>WNumber
                <a href="@Url.Action("Index", new { sortOrder = ViewBag.WNumSort, currentFilter = ViewBag.CurrentFilter })" class="glyphicon @ViewBag.SortIconW btn-link col-lg-offset-7" data-toggle="tooltip" title="Sort by WNumber"></a></strong></td>
            <td class="active"><strong>Name
                <a href="@Url.Action("Index", new { sortOrder = ViewBag.NameSort, currentFilter = ViewBag.CurrentFilter})" class="glyphicon @ViewBag.SortIconN btn-link col-lg-offset-8" data-toggle="tooltip" title="Sort by Name"></a></strong></td>
            <td class="active"><strong>Email</strong></td>
            <td class="active"><strong>Role</strong></td>
            <td class="active"><strong>Action</strong></td>
        </tr>
        @foreach (var u in Model)
        {
            
            <tr>
                <td>@u.WNumber</td>
                <td>@u.FirstName @u.LastName</td>
                <td>@u.Email</td>
                @if (u.Student != null)
                {
                    <td>Student</td>
                    <td><a href=@Url.Action("Scheduler", "Home", new { email = u.Email }) class="glyphicon glyphicon-blackboard btn-link" data-toggle="tooltip" title="View student's plan"></a></td>
                }
                else if (u.Advisor != null)
                {
                    <td>Advisor</td>
                    <td>
                        <a href="@Url.Action("DeleteAdvisor", "Admin", new { email = u.Email })" class="glyphicon glyphicon-trash btn-link text-danger" data-toggle="tooltip" title="Remove user from advisor role" onclick="return confirm('Are you sure you want to revoke advisor rights?')"></a><br />
                        @*
                        @if (u.Admin == null)
                        {
                            <a href=@Url.Action("AddAdmin", "Admin", new { email = u.Email, add = false })>Add Admin</a>
                        }
                        else
                        {
                            <a href=@Url.Action("DeleteAdmin", "Admin", new { email = u.Email, delete = false })>Remove Admin</a>
                        }
                        *@
                        
                    </td>
                }
                else if(u.Admin != null)
                {
                    <td>Admin</td>
                    <td>
                        <a href=@Url.Action("DeleteAdmin", "Admin", new { email = u.Email }) class="glyphicon glyphicon-trash btn-link text-danger" data-toggle="tooltip" title="Remove user from administrator role" onclick="return confirm('Are you sure you want to revoke admin rights?')"></a>
                        @*
                        <a href=@Url.Action("AddAdvisor", "Admin", new { email = u.Email, add = false })>Add Advisor</a><br />
                        @if (u.Admin == null)
                        {
                            <a href=@Url.Action("AddAdmin", "Admin", new { email = u.Email, add = false })>Add Admin</a>
                        }
                        else
                        {
                            <a href=@Url.Action("DeleteAdmin", "Admin", new { email = u.Email, delete = false })>Remove Admin</a>
                        }
                        *@
                    </td>
                } else
                {
                    <td>User</td>
                    <td>
                        <a href=@Url.Action("AddAdvisor", "Admin", new { email = u.Email }) class="glyphicon glyphicon-apple btn-link" data-toggle="tooltip" title="Add user as an advisor" onclick="return confirm('Are you sure you want to make this user an advisor?')"></a>
                        <a href=@Url.Action("AddAdmin", "Admin", new { email = u.Email }) class="glyphicon glyphicon-briefcase btn-link" dat-toggle="tooltip" title="Add user as an administrator" onclick="return confirm('Are you sure you want to grant admin rights?')"></a>
                    </td>
                }
            </tr>
            }

    </tbody>
</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
