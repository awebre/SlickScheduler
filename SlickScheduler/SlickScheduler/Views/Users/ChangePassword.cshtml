@model SlickScheduler.Models.EditUser
@{
    ViewBag.Title = "EditProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Your Profile</h2>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" });
    <form class="form-horizontal">
        <fieldset>
            <div class="form-group">
                @Html.LabelFor(model => model.WNumber, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.WNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.WNumber, String.Empty, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FirstName, String.Empty, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LastName, String.Empty, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, String.Empty, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, String.Empty, new { @class = "text-danger" })
                </div>
            </div>


            @* OBSOLETE OR UNUSED
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email, String.Empty, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password, String.Empty, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NewPassword,  new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NewPassword)
                    @Html.ValidationMessageFor(model => model.NewPassword, String.Empty, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword,  new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword)
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, String.Empty, new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-default" value="Save">Submit</button>
                </div>
            </div>
        </fieldset>
</form>
}
